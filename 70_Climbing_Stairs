'''
You are climbing a staircase. It takes n steps to reach the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

 

Example 1:

Input: n = 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps
Example 2:

Input: n = 3
Output: 3
Explanation: There are three ways to climb to the top.
1. 1 step + 1 step + 1 step
2. 1 step + 2 steps
3. 2 steps + 1 step
 

Constraints:

1 <= n <= 45
'''

import unittest

class Solution:
    def climbStairs(self, n: int) -> int:
        if n <= 2:
            return n
        
        first, second = 1, 2
        for _ in range(3, n + 1):
            first, second = second, first + second
        
        return second
    
# Test cases for the climbing stairs problem
    
class TestClimbingStairs(unittest.TestCase):
    def test_climb_stairs(self):
        solution = Solution()
        self.assertEqual(solution.climbStairs(2), 2)    # Two ways: (1+1), (2)
        self.assertEqual(solution.climbStairs(3), 3)    # Three ways: (1+1+1), (1+2), (2+1)
        self.assertEqual(solution.climbStairs(4), 5)    # Five ways: (1+1+1+1), (1+1+2), (1+2+1), (2+1+1), (2+2)
        self.assertEqual(solution.climbStairs(5), 8)    # Eight ways: (1+1+1+1+1), (1+1+1+2), (1+1+2+1), (1+2+1+1), (2+1+1+1), (2+2+1), (2+1+2), (1+2+2)
        self.assertEqual(solution.climbStairs(6), 13)   # Thirteen ways: (1+1+1+1+1+1), (1+1+1+1+2), (1+1+1+2+1), (1+1+2+1+1), (1+2+1+1+1), (2+1+1+1+1), (2+2+2), (2+2+1), (2+1+2), (1+2+2), (3+3), (3+2), (2+3)
        self.assertEqual(solution.climbStairs(45), 1836311903)
        self.assertEqual(solution.climbStairs(1), 1)
        self.assertEqual(solution.climbStairs(0), 0)  # Edge case
        self.assertEqual(solution.climbStairs(10), 89)
        self.assertEqual(solution.climbStairs(20), 10946)
        self.assertEqual(solution.climbStairs(30), 1346269)
        self.assertEqual(solution.climbStairs(40), 165580141)
        self.assertEqual(solution.climbStairs(100), 573147844013817084101)
    
if __name__ == '__main__':
    unittest.main()